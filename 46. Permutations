//soloution using frequency array t=0{n!*n) s=0(n+n) 67%
    void helper(vector<int>&nums,int n,vector<vector<int>>&ans,vector<int>&v,vector<int>&freq){
        if(v.size()==n){
            ans.push_back(v);
            return;
        }
        for(int i=0;i<n;i++){
            if(freq[i]==0){
                v.push_back(nums[i]);
                freq[i]=1;
                helper(nums,n,ans,v,freq);
                freq[i]=0;
                v.pop_back();
            }
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<int>v;
        vector<int>freq(nums.size(),0);
        vector<vector<int>>ans;
        helper(nums,nums.size(),ans,v,freq);
        return ans;
    }
    
    
    //method 2 without using extra space using swap method 12%
        void helper(vector<int>&nums,int n,vector<vector<int>>&ans,int ind){
        if(ind==n)    ans.push_back(nums);
        for(int i=ind;i<n;i++){
            swap(nums[i],nums[ind]);
            helper(nums,n,ans,ind+1);
            swap(nums[i],nums[ind]);
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        helper(nums,nums.size(),ans,0);
        return ans;
    }
