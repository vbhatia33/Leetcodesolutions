//  using two pointer technique , extension to two sum
   vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        if(nums.size()<3)   return {};
        vector<vector<int>>ans;
        for(int i=0;i<nums.size()-2;i++){
            int t=-nums[i];
            int j=i+1,k=nums.size()-1;
            if(i>0 and nums[i-1]==nums[i])  continue;
            while(j<k){
                if(nums[j]+nums[k]>t)   --k;
                else if(nums[j]+nums[k]<t)  ++j;
                else{
                    ans.push_back(vector<int>{nums[i],nums[j],nums[k]});
                    while(j<nums.size()-1 and nums[j+1]==nums[j])   j++;
                    while(k>i and nums[k-1]==nums[j])   k--;
                    j++;
                    k--;
                }
            }
        }
        return ans;
    }
