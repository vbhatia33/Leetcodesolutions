//first technique was brute force till num/2 1685ms
    bool checkPerfectNumber(int num) {
        int sum=0;
        for(int i=1;i<=num/2;i++){
            if(num%i==0)
                sum+=i;
        }
        if(sum==num)    return true;
        return false;
    }
    
    
    // now using sqroot technique
        bool checkPerfectNumber(int num) {
        if(num==1) return false;
        int sum=1;
        for(int i=2;i<=sqrt(num);i++){
            if(num%i==0)
                sum+=i+num/i;
        }
        if(sum==num)    return true;
        return false;
    }
    

    //euclid theorem
        def checkPerfectNumber(self, num):
        primes = {2, 3, 5, 7, 13, 17, 19, 31}
        for item in primes:
            if (2**(item-1))*((2**item)-1) == num:
                return True
        return False
