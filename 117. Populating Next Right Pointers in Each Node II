// simple queue 0(n) solution 
    Node* connect(Node* root) {
        if(!root)   return NULL;
        queue<Node*>q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            Node* front=q.front();
            q.pop();
            if(front==NULL){
                if(!q.empty())  q.push(NULL);
            }
            else{
                if(front->left)  q.push(front->left);
                if(front->right) q.push(front->right);
                if(q.front()!=NULL) front->next=q.front();
            }
        }
            return root;
        
    }
    
    //iterative solution
        Node* connect(Node* root) {
        Node *head=root;
        Node *prev=NULL;
        Node *curr=NULL;
        while(head){
            curr=head;
            prev=NULL;
            while(curr){
                if(curr->left){
                    if(prev==NULL){
                        head=curr->left;
                    }
                    else{
                        prev->next=curr->left;
                    }
                    prev=curr->left;
                }
                if(curr->right){
                    if(prev==NULL){
                        head=curr->right;
                    }
                    else{
                        prev->next=curr->right;
                    }
                    prev=curr->right;
                }
                curr=curr->next;
            }
            if(!head->left and !head->right){
                head=head->next;
            }
        }
        return root;
    }
