//using map sorting by value - to notice using map=35% using unordered map=88% 

    bool static sortbyval(pair<int,int>&a,pair<int,int>&b){
        return a.second>b.second;
    }
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<pair<int,int>>v;
        vector<int> ans;
        unordered_map<int,int>m;
        for(int i=0;i<nums.size();i++){
            m[nums[i]]++;
        }
        for(auto i=m.begin();i!=m.end();i++){
            v.push_back(make_pair(i->first,i->second));
        }
        sort(v.begin(),v.end(),sortbyval);
        for(int i=0;i<k;i++){
            ans.push_back(v[i].first);
        }
        return ans;
    }
    
    //using priority queue
        bool static sortbyval(pair<int,int>&a,pair<int,int>&b){
        return a.second>b.second;
    }
    vector<int> topKFrequent(vector<int>& nums, int k) {
        priority_queue<pair<int,int>>q;
        vector<int> ans;
        unordered_map<int,int>m;
        for(int i=0;i<nums.size();i++){
            m[nums[i]]++;
        }
        for(auto i=m.begin();i!=m.end();i++){
            q.push(make_pair(i->second,i->first));
        }
        //sort(v.begin(),v.end(),sortbyval);
        for(int i=0;i<k;i++){
            ans.push_back(q.top().second);
            q.pop();
        }
        return ans;
    }
