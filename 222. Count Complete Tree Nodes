//iterative level wise
    int countNodes(TreeNode* root) {
        int count=0;
        if(root==NULL)  return count;
        queue<TreeNode*>q;
        q.push(root);
        ++count;
        while(!q.empty()){
            TreeNode *f=q.front();
            q.pop();
            if(f->left){
                q.push(f->left);
                count++;
            }
            if(f->right){
                q.push(f->right);
                count++;
            }
            
        }
        return count;
    }
    
    //recursive  60 ms 
    int countNodes(TreeNode* root) {
        int count=0;
        if(root==NULL)  return count;
        if(root->left)  count+=countNodes(root->left);
        if(root->right)     count+=countNodes(root->right);
        return count+1;
    }
