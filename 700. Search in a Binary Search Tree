    TreeNode* searchBST(TreeNode* root, int val) {
        while(root!=NULL){
            if(root->val==val)  return root;
            else if(root->val>val)
                root=root->left;
            else
                root=root->right;
        }
        return NULL;
    }
    
    //solution on 14 april
        TreeNode* searchBST(TreeNode* root, int val) {
        if(!root)   return NULL;
        if(root->val==val)  return root;
        if(val>root->val)   return searchBST(root->right,val);
        else   return searchBST(root->left,val);
        
    }
    
    
    //check out this iterative solution
    TreeNode* searchBST(TreeNode* root, int val) {
	while(root && root->val != val) root = root->val < val ? root->right : root->left;
	return root;
}
