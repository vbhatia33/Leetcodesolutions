   
   //2ms solution where new array has been initialized-
   
   void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        vector<int> ans(m+n);
        int i=0;
        int j=0;
        int k=0;
        while(i<m && j<n){
            if(nums1[i]<nums2[j])
                ans[k++]=nums1[i++];
            else
                ans[k++]=nums2[j++];
            }
        while(i<m)
            ans[k++]=nums1[i++];
        while(j<n)
            ans[k++]=nums2[j++];
        nums1=ans;
        
    }
    
    //another solution where the nums1 is final sorted array-
    //The trick is initialize pointer from last and the store numbers
        void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i=m-1;
        int j=n-1;
        int k=n+m-1;
        while(i>=0 and j>=0){
            if(nums1[i]>nums2[j])
                nums1[k--]=nums1[i--];
            else
                nums1[k--]=nums2[j--];
        }
        while(j>=0)
            nums1[k--]=nums2[j--];
        
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    ////// find element only occuring once ,others are occuring twice
    
    
    
         /*   int count=0;
        for(int i=0;i<nums.size();i++){
            count=0;
            for(int j=0;j<nums.size();j++){
                if(nums[i]==nums[j])
                    count++;
            }
            if(count==1)
                return nums[i];
        }
        return -1;
       
       
       
       
       
       //THIS METHOD SHOLUD BE RIGHT NLOGN+N   UNALBLE TO FIND ERROR
        sort(nums.begin(),nums.end());
        //for(int i=0;i<nums.size();i++){
        //cout<<nums[i]<<" ";
        //}
        
        if(nums.size()==1) return nums[0];
        if(nums[0]!=nums[1])
            return nums[0];
        if(nums.size()-1!=nums.size()-2)
            return nums.size()-1;
        for(int i=1;i<nums.size()-1;i++){
            cout<<nums[i]<<endl;
            if(nums[i+1]==nums[i] || nums[i-1]==nums[i] ){
                cout<<nums[i]<<endl;
                continue;
            }
            else{
                cout<<nums[i]<<endl;
                return nums[i];
                }
            }
    return -1;
    
    */
    
    
    
    
   
