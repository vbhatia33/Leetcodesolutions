    0(n2) 
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> v;
        for(int i=0;i<nums.size();i++){
            for(int j=i+1;j<nums.size();j++){
                if(target==nums[i]+nums[j]){
                    v.push_back(i);
                    v.push_back(j);
                    return v;
                }
            }
        }
        return v;
        
    }
    
    
    //using hashmap
        vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> m;
        vector<int>ans;
        for(int i=0;i<nums.size();i++){
            int x=target-nums[i];
            if(m.count(x)){
                ans.push_back(m[x]);
                ans.push_back(i);
                return ans;
            }
            m[nums[i]]=i;
        }
        return ans;
    }
